version: '3.8'

services:
  # üêç Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=true
      - PYTHONPATH=/app
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
    env_file:
      - ./backend/.env
    depends_on:
      - postgres
      - redis
    networks:
      - meallens-network
    restart: unless-stopped
    command: >
      sh -c "
        pip install -r requirements.txt &&
        python app.py
      "

  # ‚öõÔ∏è Frontend Service  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
      - "5173:5173"
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - VITE_API_URL=http://localhost:5000
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    env_file:
      - ./frontend/.env.local
    networks:
      - meallens-network
    restart: unless-stopped
    command: >
      sh -c "
        npm install &&
        npm run dev -- --host 0.0.0.0 --port 3000
      "

  # üêò PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: meallens
      POSTGRES_USER: meallens_user
      POSTGRES_PASSWORD: meallens_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - meallens-network
    restart: unless-stopped

  # üî¥ Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - meallens-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # üåê Nginx Reverse Proxy (Production-like)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - nginx_logs:/var/log/nginx
    depends_on:
      - backend
      - frontend
    networks:
      - meallens-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  backend_node_modules:
    driver: local
  frontend_node_modules:
    driver: local
  nginx_logs:
    driver: local

networks:
  meallens-network:
    driver: bridge